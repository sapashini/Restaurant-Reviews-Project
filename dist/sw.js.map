{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/sw.js"],"names":[],"mappings":"AAAA;;;ACAA;;;;AAKA,IAAM,OAAO,GAAG,wBAAhB,C,CACA;;AACA,IAAM,eAAe,GAAG,OAAO,GAAG,OAAlC,C,CAEA;;AACA,IAAM,gBAAgB,GAAG,OAAO,GAAG,SAAnC,C,CAEA;;AACA,IAAI,SAAS,GAAG,CACd,eADc,EAEd,gBAFc,CAAhB,C,CAKA;;AACA,IAAI,CAAC,gBAAL,CAAsB,SAAtB,EAAiC,UAAS,KAAT,EAAgB;AAC/C,EAAA,KAAK,CAAC,SAAN,CACE,MAAM,CAAC,IAAP,CAAY,eAAZ,EAA6B,IAA7B,CAAkC,UAAS,KAAT,EAAgB;AAChD,WAAO,KAAK,CAAC,MAAN,CAAa,CAClB,GADkB,EAElB,kBAFkB,EAGlB,iBAHkB,EAIlB,wBAJkB,EAKlB,uBALkB,EAMlB,iBANkB,EAOlB,eAPkB,EAQlB,aARkB,EASlB,wBATkB,EAUlB,oBAVkB,EAWlB,wBAXkB,CAAb,CAAP;AAaD,GAdD,CADF;AAiBD,CAlBD,E,CAoBA;;AACA,IAAI,CAAC,gBAAL,CAAsB,UAAtB,EAAkC,UAAS,KAAT,EAAgB;AAChD,EAAA,KAAK,CAAC,SAAN,CACE,MAAM,CAAC,IAAP,GAAc,IAAd,CAAmB,UAAS,UAAT,EAAqB;AACtC,WAAO,OAAO,CAAC,GAAR,CACL,UAAU,CAAC,MAAX,CAAkB,UAAS,SAAT,EAAoB;AACpC,aAAO,SAAS,CAAC,UAAV,CAAqB,OAArB,KACA,CAAC,SAAS,CAAC,QAAV,CAAmB,SAAnB,CADR;AAED,KAHD,EAGG,GAHH,CAGO,UAAS,SAAT,EAAoB;AACzB,aAAO,MAAM,CAAC,MAAP,CAAc,SAAd,CAAP;AACD,KALD,CADK,CAAP;AAQD,GATD,CADF;AAYD,CAbD,E,CAeA;;AACA,IAAI,CAAC,gBAAL,CAAsB,OAAtB,EAA+B,UAAS,KAAT,EAAgB;AAC7C,MAAM,UAAU,GAAG,IAAI,GAAJ,CAAQ,KAAK,CAAC,OAAN,CAAc,GAAtB,CAAnB,CAD6C,CAG7C;;AACA,MAAI,UAAU,CAAC,MAAX,KAAsB,QAAQ,CAAC,MAAnC,EAA2C;AAEzC;AACA;AACA,QAAI,UAAU,CAAC,QAAX,CAAoB,UAApB,CAA+B,kBAA/B,CAAJ,EAAwD;AACtD,MAAA,KAAK,CAAC,WAAN,CAAkB,MAAM,CAAC,KAAP,CAAa,kBAAb,CAAlB;AACA,aAFsD,CAE9C;AACT,KAPwC,CASzC;;;AACA,QAAI,UAAU,CAAC,QAAX,CAAoB,UAApB,CAA+B,MAA/B,CAAJ,EAA4C;AAC1C,MAAA,KAAK,CAAC,WAAN,CAAkB,UAAU,CAAC,KAAK,CAAC,OAAP,CAA5B;AACA,aAF0C,CAElC;AACT;AACF,GAlB4C,CAoB9C;;;AACD,EAAA,KAAK,CAAC,WAAN,CACC,MAAM,CAAC,KAAP,CAAa,KAAK,CAAC,OAAnB,EAA4B,IAA5B,CAAiC,UAAS,QAAT,EAAmB;AACnD,WAAO,QAAQ,IAAI,KAAK,CAAC,KAAK,CAAC,OAAP,CAAxB;AACG,GAFJ,CADD;AAKC,CA1BD;;AA4BA,SAAS,UAAT,CAAoB,OAApB,EAA6B;AAC3B,MAAI,eAAe,GAAG,OAAO,CAAC,GAA9B,CAD2B,CAG3B;AACA;AACA;;AACA,EAAA,eAAe,GAAG,eAAe,CAAC,OAAhB,CAAwB,6CAAxB,EAAuE,EAAvE,CAAlB;AAEA,SAAO,MAAM,CAAC,IAAP,CAAY,gBAAZ,EAA8B,IAA9B,CAAmC,UAAS,KAAT,EAAgB;AACxD,WAAO,KAAK,CAAC,KAAN,CAAY,eAAZ,EAA6B,IAA7B,CAAkC,UAAS,QAAT,EAAmB;AAC1D;AACA,aAAO,QAAQ,IAAI,KAAK,CAAC,OAAD,CAAL,CAAe,IAAf,CAAoB,UAAS,eAAT,EAA0B;AAC/D,QAAA,KAAK,CAAC,GAAN,CAAU,eAAV,EAA2B,eAAe,CAAC,KAAhB,EAA3B;AACA,eAAO,eAAP;AACD,OAHkB,CAAnB;AAID,KANM,CAAP;AAOD,GARM,CAAP;AASD","file":"sw.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*\r\n* I like to acknoledge the inspiration and guide from MWS Restaurant Reviews Project\r\nA Walkthrough by Alexandro Perez.\r\n*/\r\n\r\nconst appName = \"restaurant-reviews-app\"\r\n// Create a chache variable for recycling of chaches.\r\nconst staticCacheName = appName + \"-v1.0\";\r\n\r\n// Create cache for magery.\r\nconst contentImgsCache = appName + \"-images\";\r\n\r\n// Array for the chache.\r\nvar allCaches = [\r\n  staticCacheName,\r\n  contentImgsCache\r\n];\r\n\r\n// Cache all your static assets,at Service Worker Install time.\r\nself.addEventListener('install', function(event) {\r\n  event.waitUntil(\r\n    caches.open(staticCacheName).then(function(cache) {\r\n      return cache.addAll([\r\n        '/',\r\n        '/restaurant.html',\r\n        '/css/styles.css',\r\n        '/css/styles-medium.css',\r\n        '/css/styles-large.css',\r\n        '/js/dbhelper.js',\r\n        '/js/secret.js',\r\n        '/js/main.js',\r\n        '/js/restaurant_info.js',\r\n        '/js/register-sw.js',\r\n        '/data/restaurants.json'\r\n      ]);\r\n    })\r\n  );\r\n});\r\n\r\n// On activate, delete any old static cache if its name changes.\r\nself.addEventListener('activate', function(event) {\r\n  event.waitUntil(\r\n    caches.keys().then(function(cacheNames) {\r\n      return Promise.all(\r\n        cacheNames.filter(function(cacheName) {\r\n          return cacheName.startsWith(appName) &&\r\n                 !allCaches.includes(cacheName);\r\n        }).map(function(cacheName) {\r\n          return caches.delete(cacheName);\r\n        })\r\n      );\r\n    })\r\n  );\r\n});\r\n\r\n// Add a fetch listener to the sw.js file to responds to cache, falling back to network.\r\nself.addEventListener('fetch', function(event) {\r\n  const requestUrl = new URL(event.request.url);\r\n\r\n  // only highjack request made to our app (not mapbox maps or leaflet, for example)\r\n  if (requestUrl.origin === location.origin) {\r\n\r\n    // Since requests made to restaurant.html have search params (like ?id=1), the url can't be used as the\r\n    // key to access the cache, so just respondWith restaurant.html if pathname startsWith '/restaurant.html'\r\n    if (requestUrl.pathname.startsWith('/restaurant.html')) {\r\n      event.respondWith(caches.match('/restaurant.html'));\r\n      return; // Done handling request, so exit early.\r\n    }\r\n\r\n    // If the request pathname starts with /img, then we need to handle images.\r\n    if (requestUrl.pathname.startsWith('/img')) {\r\n      event.respondWith(serveImage(event.request));\r\n      return; // Done handling request, so exit early.\r\n    }\r\n  }\r\n\r\n // Default behavior: respond with cached elements, if any, falling back to network.\r\nevent.respondWith(\r\n\tcaches.match(event.request).then(function(response) {\r\n\t\treturn response || fetch(event.request);\r\n    })\r\n  );\r\n});\r\n\r\nfunction serveImage(request) {\r\n  let imageStorageUrl = request.url;\r\n\r\n  // Make a new URL with a stripped suffix and extension from the request url\r\n  // i.e. /img/1-medium.jpg  will become  /img/1\r\n  // we'll use this as the KEY for storing image into cache\r\n  imageStorageUrl = imageStorageUrl.replace(/-small\\.\\w{3}|-medium\\.\\w{3}|-large\\.\\w{3}/i, '');\r\n\r\n  return caches.open(contentImgsCache).then(function(cache) {\r\n    return cache.match(imageStorageUrl).then(function(response) {\r\n      // if image is in cache, return it, else fetch from network, cache a clone, then return network response\r\n      return response || fetch(request).then(function(networkResponse) {\r\n        cache.put(imageStorageUrl, networkResponse.clone());\r\n        return networkResponse;\r\n      });\r\n    });\r\n  });\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvc3cuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBOzs7O0FBS0EsSUFBTSxPQUFPLEdBQUcsd0JBQWhCLEMsQ0FDQTs7QUFDQSxJQUFNLGVBQWUsR0FBRyxPQUFPLEdBQUcsT0FBbEMsQyxDQUVBOztBQUNBLElBQU0sZ0JBQWdCLEdBQUcsT0FBTyxHQUFHLFNBQW5DLEMsQ0FFQTs7QUFDQSxJQUFJLFNBQVMsR0FBRyxDQUNkLGVBRGMsRUFFZCxnQkFGYyxDQUFoQixDLENBS0E7O0FBQ0EsSUFBSSxDQUFDLGdCQUFMLENBQXNCLFNBQXRCLEVBQWlDLFVBQVMsS0FBVCxFQUFnQjtBQUMvQyxFQUFBLEtBQUssQ0FBQyxTQUFOLENBQ0UsTUFBTSxDQUFDLElBQVAsQ0FBWSxlQUFaLEVBQTZCLElBQTdCLENBQWtDLFVBQVMsS0FBVCxFQUFnQjtBQUNoRCxXQUFPLEtBQUssQ0FBQyxNQUFOLENBQWEsQ0FDbEIsR0FEa0IsRUFFbEIsa0JBRmtCLEVBR2xCLGlCQUhrQixFQUlsQix3QkFKa0IsRUFLbEIsdUJBTGtCLEVBTWxCLGlCQU5rQixFQU9sQixlQVBrQixFQVFsQixhQVJrQixFQVNsQix3QkFUa0IsRUFVbEIsb0JBVmtCLEVBV2xCLHdCQVhrQixDQUFiLENBQVA7QUFhRCxHQWRELENBREY7QUFpQkQsQ0FsQkQsRSxDQW9CQTs7QUFDQSxJQUFJLENBQUMsZ0JBQUwsQ0FBc0IsVUFBdEIsRUFBa0MsVUFBUyxLQUFULEVBQWdCO0FBQ2hELEVBQUEsS0FBSyxDQUFDLFNBQU4sQ0FDRSxNQUFNLENBQUMsSUFBUCxHQUFjLElBQWQsQ0FBbUIsVUFBUyxVQUFULEVBQXFCO0FBQ3RDLFdBQU8sT0FBTyxDQUFDLEdBQVIsQ0FDTCxVQUFVLENBQUMsTUFBWCxDQUFrQixVQUFTLFNBQVQsRUFBb0I7QUFDcEMsYUFBTyxTQUFTLENBQUMsVUFBVixDQUFxQixPQUFyQixLQUNBLENBQUMsU0FBUyxDQUFDLFFBQVYsQ0FBbUIsU0FBbkIsQ0FEUjtBQUVELEtBSEQsRUFHRyxHQUhILENBR08sVUFBUyxTQUFULEVBQW9CO0FBQ3pCLGFBQU8sTUFBTSxDQUFDLE1BQVAsQ0FBYyxTQUFkLENBQVA7QUFDRCxLQUxELENBREssQ0FBUDtBQVFELEdBVEQsQ0FERjtBQVlELENBYkQsRSxDQWVBOztBQUNBLElBQUksQ0FBQyxnQkFBTCxDQUFzQixPQUF0QixFQUErQixVQUFTLEtBQVQsRUFBZ0I7QUFDN0MsTUFBTSxVQUFVLEdBQUcsSUFBSSxHQUFKLENBQVEsS0FBSyxDQUFDLE9BQU4sQ0FBYyxHQUF0QixDQUFuQixDQUQ2QyxDQUc3Qzs7QUFDQSxNQUFJLFVBQVUsQ0FBQyxNQUFYLEtBQXNCLFFBQVEsQ0FBQyxNQUFuQyxFQUEyQztBQUV6QztBQUNBO0FBQ0EsUUFBSSxVQUFVLENBQUMsUUFBWCxDQUFvQixVQUFwQixDQUErQixrQkFBL0IsQ0FBSixFQUF3RDtBQUN0RCxNQUFBLEtBQUssQ0FBQyxXQUFOLENBQWtCLE1BQU0sQ0FBQyxLQUFQLENBQWEsa0JBQWIsQ0FBbEI7QUFDQSxhQUZzRCxDQUU5QztBQUNULEtBUHdDLENBU3pDOzs7QUFDQSxRQUFJLFVBQVUsQ0FBQyxRQUFYLENBQW9CLFVBQXBCLENBQStCLE1BQS9CLENBQUosRUFBNEM7QUFDMUMsTUFBQSxLQUFLLENBQUMsV0FBTixDQUFrQixVQUFVLENBQUMsS0FBSyxDQUFDLE9BQVAsQ0FBNUI7QUFDQSxhQUYwQyxDQUVsQztBQUNUO0FBQ0YsR0FsQjRDLENBb0I5Qzs7O0FBQ0QsRUFBQSxLQUFLLENBQUMsV0FBTixDQUNDLE1BQU0sQ0FBQyxLQUFQLENBQWEsS0FBSyxDQUFDLE9BQW5CLEVBQTRCLElBQTVCLENBQWlDLFVBQVMsUUFBVCxFQUFtQjtBQUNuRCxXQUFPLFFBQVEsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLE9BQVAsQ0FBeEI7QUFDRyxHQUZKLENBREQ7QUFLQyxDQTFCRDs7QUE0QkEsU0FBUyxVQUFULENBQW9CLE9BQXBCLEVBQTZCO0FBQzNCLE1BQUksZUFBZSxHQUFHLE9BQU8sQ0FBQyxHQUE5QixDQUQyQixDQUczQjtBQUNBO0FBQ0E7O0FBQ0EsRUFBQSxlQUFlLEdBQUcsZUFBZSxDQUFDLE9BQWhCLENBQXdCLDZDQUF4QixFQUF1RSxFQUF2RSxDQUFsQjtBQUVBLFNBQU8sTUFBTSxDQUFDLElBQVAsQ0FBWSxnQkFBWixFQUE4QixJQUE5QixDQUFtQyxVQUFTLEtBQVQsRUFBZ0I7QUFDeEQsV0FBTyxLQUFLLENBQUMsS0FBTixDQUFZLGVBQVosRUFBNkIsSUFBN0IsQ0FBa0MsVUFBUyxRQUFULEVBQW1CO0FBQzFEO0FBQ0EsYUFBTyxRQUFRLElBQUksS0FBSyxDQUFDLE9BQUQsQ0FBTCxDQUFlLElBQWYsQ0FBb0IsVUFBUyxlQUFULEVBQTBCO0FBQy9ELFFBQUEsS0FBSyxDQUFDLEdBQU4sQ0FBVSxlQUFWLEVBQTJCLGVBQWUsQ0FBQyxLQUFoQixFQUEzQjtBQUNBLGVBQU8sZUFBUDtBQUNELE9BSGtCLENBQW5CO0FBSUQsS0FOTSxDQUFQO0FBT0QsR0FSTSxDQUFQO0FBU0QiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCIvKlxyXG4qIEkgbGlrZSB0byBhY2tub2xlZGdlIHRoZSBpbnNwaXJhdGlvbiBhbmQgZ3VpZGUgZnJvbSBNV1MgUmVzdGF1cmFudCBSZXZpZXdzIFByb2plY3RcclxuQSBXYWxrdGhyb3VnaCBieSBBbGV4YW5kcm8gUGVyZXouXHJcbiovXHJcblxyXG5jb25zdCBhcHBOYW1lID0gXCJyZXN0YXVyYW50LXJldmlld3MtYXBwXCJcclxuLy8gQ3JlYXRlIGEgY2hhY2hlIHZhcmlhYmxlIGZvciByZWN5Y2xpbmcgb2YgY2hhY2hlcy5cclxuY29uc3Qgc3RhdGljQ2FjaGVOYW1lID0gYXBwTmFtZSArIFwiLXYxLjBcIjtcclxuXHJcbi8vIENyZWF0ZSBjYWNoZSBmb3IgbWFnZXJ5LlxyXG5jb25zdCBjb250ZW50SW1nc0NhY2hlID0gYXBwTmFtZSArIFwiLWltYWdlc1wiO1xyXG5cclxuLy8gQXJyYXkgZm9yIHRoZSBjaGFjaGUuXHJcbnZhciBhbGxDYWNoZXMgPSBbXHJcbiAgc3RhdGljQ2FjaGVOYW1lLFxyXG4gIGNvbnRlbnRJbWdzQ2FjaGVcclxuXTtcclxuXHJcbi8vIENhY2hlIGFsbCB5b3VyIHN0YXRpYyBhc3NldHMsYXQgU2VydmljZSBXb3JrZXIgSW5zdGFsbCB0aW1lLlxyXG5zZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ2luc3RhbGwnLCBmdW5jdGlvbihldmVudCkge1xyXG4gIGV2ZW50LndhaXRVbnRpbChcclxuICAgIGNhY2hlcy5vcGVuKHN0YXRpY0NhY2hlTmFtZSkudGhlbihmdW5jdGlvbihjYWNoZSkge1xyXG4gICAgICByZXR1cm4gY2FjaGUuYWRkQWxsKFtcclxuICAgICAgICAnLycsXHJcbiAgICAgICAgJy9yZXN0YXVyYW50Lmh0bWwnLFxyXG4gICAgICAgICcvY3NzL3N0eWxlcy5jc3MnLFxyXG4gICAgICAgICcvY3NzL3N0eWxlcy1tZWRpdW0uY3NzJyxcclxuICAgICAgICAnL2Nzcy9zdHlsZXMtbGFyZ2UuY3NzJyxcclxuICAgICAgICAnL2pzL2RiaGVscGVyLmpzJyxcclxuICAgICAgICAnL2pzL3NlY3JldC5qcycsXHJcbiAgICAgICAgJy9qcy9tYWluLmpzJyxcclxuICAgICAgICAnL2pzL3Jlc3RhdXJhbnRfaW5mby5qcycsXHJcbiAgICAgICAgJy9qcy9yZWdpc3Rlci1zdy5qcycsXHJcbiAgICAgICAgJy9kYXRhL3Jlc3RhdXJhbnRzLmpzb24nXHJcbiAgICAgIF0pO1xyXG4gICAgfSlcclxuICApO1xyXG59KTtcclxuXHJcbi8vIE9uIGFjdGl2YXRlLCBkZWxldGUgYW55IG9sZCBzdGF0aWMgY2FjaGUgaWYgaXRzIG5hbWUgY2hhbmdlcy5cclxuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdhY3RpdmF0ZScsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgZXZlbnQud2FpdFVudGlsKFxyXG4gICAgY2FjaGVzLmtleXMoKS50aGVuKGZ1bmN0aW9uKGNhY2hlTmFtZXMpIHtcclxuICAgICAgcmV0dXJuIFByb21pc2UuYWxsKFxyXG4gICAgICAgIGNhY2hlTmFtZXMuZmlsdGVyKGZ1bmN0aW9uKGNhY2hlTmFtZSkge1xyXG4gICAgICAgICAgcmV0dXJuIGNhY2hlTmFtZS5zdGFydHNXaXRoKGFwcE5hbWUpICYmXHJcbiAgICAgICAgICAgICAgICAgIWFsbENhY2hlcy5pbmNsdWRlcyhjYWNoZU5hbWUpO1xyXG4gICAgICAgIH0pLm1hcChmdW5jdGlvbihjYWNoZU5hbWUpIHtcclxuICAgICAgICAgIHJldHVybiBjYWNoZXMuZGVsZXRlKGNhY2hlTmFtZSk7XHJcbiAgICAgICAgfSlcclxuICAgICAgKTtcclxuICAgIH0pXHJcbiAgKTtcclxufSk7XHJcblxyXG4vLyBBZGQgYSBmZXRjaCBsaXN0ZW5lciB0byB0aGUgc3cuanMgZmlsZSB0byByZXNwb25kcyB0byBjYWNoZSwgZmFsbGluZyBiYWNrIHRvIG5ldHdvcmsuXHJcbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignZmV0Y2gnLCBmdW5jdGlvbihldmVudCkge1xyXG4gIGNvbnN0IHJlcXVlc3RVcmwgPSBuZXcgVVJMKGV2ZW50LnJlcXVlc3QudXJsKTtcclxuXHJcbiAgLy8gb25seSBoaWdoamFjayByZXF1ZXN0IG1hZGUgdG8gb3VyIGFwcCAobm90IG1hcGJveCBtYXBzIG9yIGxlYWZsZXQsIGZvciBleGFtcGxlKVxyXG4gIGlmIChyZXF1ZXN0VXJsLm9yaWdpbiA9PT0gbG9jYXRpb24ub3JpZ2luKSB7XHJcblxyXG4gICAgLy8gU2luY2UgcmVxdWVzdHMgbWFkZSB0byByZXN0YXVyYW50Lmh0bWwgaGF2ZSBzZWFyY2ggcGFyYW1zIChsaWtlID9pZD0xKSwgdGhlIHVybCBjYW4ndCBiZSB1c2VkIGFzIHRoZVxyXG4gICAgLy8ga2V5IHRvIGFjY2VzcyB0aGUgY2FjaGUsIHNvIGp1c3QgcmVzcG9uZFdpdGggcmVzdGF1cmFudC5odG1sIGlmIHBhdGhuYW1lIHN0YXJ0c1dpdGggJy9yZXN0YXVyYW50Lmh0bWwnXHJcbiAgICBpZiAocmVxdWVzdFVybC5wYXRobmFtZS5zdGFydHNXaXRoKCcvcmVzdGF1cmFudC5odG1sJykpIHtcclxuICAgICAgZXZlbnQucmVzcG9uZFdpdGgoY2FjaGVzLm1hdGNoKCcvcmVzdGF1cmFudC5odG1sJykpO1xyXG4gICAgICByZXR1cm47IC8vIERvbmUgaGFuZGxpbmcgcmVxdWVzdCwgc28gZXhpdCBlYXJseS5cclxuICAgIH1cclxuXHJcbiAgICAvLyBJZiB0aGUgcmVxdWVzdCBwYXRobmFtZSBzdGFydHMgd2l0aCAvaW1nLCB0aGVuIHdlIG5lZWQgdG8gaGFuZGxlIGltYWdlcy5cclxuICAgIGlmIChyZXF1ZXN0VXJsLnBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9pbWcnKSkge1xyXG4gICAgICBldmVudC5yZXNwb25kV2l0aChzZXJ2ZUltYWdlKGV2ZW50LnJlcXVlc3QpKTtcclxuICAgICAgcmV0dXJuOyAvLyBEb25lIGhhbmRsaW5nIHJlcXVlc3QsIHNvIGV4aXQgZWFybHkuXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuIC8vIERlZmF1bHQgYmVoYXZpb3I6IHJlc3BvbmQgd2l0aCBjYWNoZWQgZWxlbWVudHMsIGlmIGFueSwgZmFsbGluZyBiYWNrIHRvIG5ldHdvcmsuXHJcbmV2ZW50LnJlc3BvbmRXaXRoKFxyXG5cdGNhY2hlcy5tYXRjaChldmVudC5yZXF1ZXN0KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcblx0XHRyZXR1cm4gcmVzcG9uc2UgfHwgZmV0Y2goZXZlbnQucmVxdWVzdCk7XHJcbiAgICB9KVxyXG4gICk7XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gc2VydmVJbWFnZShyZXF1ZXN0KSB7XHJcbiAgbGV0IGltYWdlU3RvcmFnZVVybCA9IHJlcXVlc3QudXJsO1xyXG5cclxuICAvLyBNYWtlIGEgbmV3IFVSTCB3aXRoIGEgc3RyaXBwZWQgc3VmZml4IGFuZCBleHRlbnNpb24gZnJvbSB0aGUgcmVxdWVzdCB1cmxcclxuICAvLyBpLmUuIC9pbWcvMS1tZWRpdW0uanBnICB3aWxsIGJlY29tZSAgL2ltZy8xXHJcbiAgLy8gd2UnbGwgdXNlIHRoaXMgYXMgdGhlIEtFWSBmb3Igc3RvcmluZyBpbWFnZSBpbnRvIGNhY2hlXHJcbiAgaW1hZ2VTdG9yYWdlVXJsID0gaW1hZ2VTdG9yYWdlVXJsLnJlcGxhY2UoLy1zbWFsbFxcLlxcd3szfXwtbWVkaXVtXFwuXFx3ezN9fC1sYXJnZVxcLlxcd3szfS9pLCAnJyk7XHJcblxyXG4gIHJldHVybiBjYWNoZXMub3Blbihjb250ZW50SW1nc0NhY2hlKS50aGVuKGZ1bmN0aW9uKGNhY2hlKSB7XHJcbiAgICByZXR1cm4gY2FjaGUubWF0Y2goaW1hZ2VTdG9yYWdlVXJsKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcbiAgICAgIC8vIGlmIGltYWdlIGlzIGluIGNhY2hlLCByZXR1cm4gaXQsIGVsc2UgZmV0Y2ggZnJvbSBuZXR3b3JrLCBjYWNoZSBhIGNsb25lLCB0aGVuIHJldHVybiBuZXR3b3JrIHJlc3BvbnNlXHJcbiAgICAgIHJldHVybiByZXNwb25zZSB8fCBmZXRjaChyZXF1ZXN0KS50aGVuKGZ1bmN0aW9uKG5ldHdvcmtSZXNwb25zZSkge1xyXG4gICAgICAgIGNhY2hlLnB1dChpbWFnZVN0b3JhZ2VVcmwsIG5ldHdvcmtSZXNwb25zZS5jbG9uZSgpKTtcclxuICAgICAgICByZXR1cm4gbmV0d29ya1Jlc3BvbnNlO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG59Il19"}